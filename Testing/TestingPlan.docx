Introduction
	Following up from our Design Document we would like to make sure that implementing our project goes smoothly. For this to happen we highlighted important interactions in our system so that we can test them and understand exactly what we need from them. Doing so will reduce the amount of "speed bumps" the group will face when writing actual code for RoboSport370. As a group we decided to test: Board, ForthInterpreter, GameMaster, HexNodeTraversal, Librarian, RobotAI, and RoboBuilder. These classes are involved in the most common and most important interactions in our design; creating a safeguard for them will only strengthen our software and make implementation less tedious. 

Board
-	LinkNode
-	Build

ForthInterpreter
-	Literal Words, Defining Word, Forth Word, Comments 

GameMaster
-	Identify
-	Scan

HexNodeTraversal
-	Functionality

Librarian
-	Everything

RobotAI
-	Load robot from script

RobotBuilder
-	Building normal Robot and AI

Changes
    After the Design Document and the feedback our group received, we did not feel the need to make any major changes to our system. The only small change we have made since then is that HexNodeTraversal is now an iterator. Also, we did not include AspectJ in our design because we are not familiar with it and were unsure about its usage. In our implementation, we may decide to use AspectJ, but there is no extra testing to be done for it; the functionality of our system will remain the same whether we decide to use this tool or not.

Summary
    In our testing for RoboSport370 it is important to point out we did not include trivial tests. As stated in the introduction, only the important and common interactions were tested. We felt that it was sufficient to have a plan for testing these interactions only because when we go to implement it, writing code for tests will be easy; the trivial stuff is self-explanatory and now that we have an idea of how to test the hard stuff, testing our software will be much easier. Just to reiterate, the classes we developed a test plan for are: Board, ForthInterpreter, GameMaster, HexNodeTraversal, Librarian, and RobotAI. With the completion of the test plan, next we can start our actual implementation of RoboSport370; writing code for this will feel “safer” and easy now that we have a safeguard to protect our design. 